#pragma once

/*
 * Класс, создающий сетку судоку заданного размера.
 * ( Т.е. поле судоку может быть 4х4, 9х9, 16х16 и т.д.)
 * Размер является натуральным квадратом.
 */
class sudoku {

	/*
	 * Основной динамический массив, который будет использоваться для генерации судоку.
	 */
	size_t **matrix;
	/*
	 * Размер матрицы.
	 */
	size_t size;
	/*
	 * Размер квадрата
	 */
	size_t sideSquare;
	/*
	 * Уровень сложности судоку
	 */
	size_t level;
	/*
	 * Заполнет горизонтальный район с указанными границами
	 *
	 * @param int border1 и border2 - границы заполняемого района
	 */
	void fillArea(size_t border1, size_t border2);
	/*
	 * Функция, транспонирующая матрицу
	 */
	void transposition();
	/*
	 * Функция, которая меняет местами две строки в одном районе
	 */
	void swapRowsSmall();
	/*
	 * Функция, которая меняет местами два столбца в одном районе
	 */
	void swapColumsSmall();
	/*
	 * Функция, которая меняет местами два района по горизонтали
	 */
	void swapRowsArea();
	/*
	 * Функция, которая меняет местами два района по вертикали
	 */
	void swapColumsArea();
	/*
	 * Функция, которая пытается убирать числа и получить однозначно-решаемый судоку 
	 *
	 */
	bool deliteItems();

public:
	/*
	 * Конструктор.
	 *
	 * @param size - размер создаваемого поля
	 */
	sudoku(const size_t size);
	/*
	 * Конструктор копирования.
	 *
	 * Создаёт судоку на основе уже существующего судоку.
	 *
	 * @param source судоку, на совнове которого следует создать
	 * новое судоку
	 */
	sudoku(const sudoku & source);
	/*
	 * Оператор присваивания.
	 *
	 * Присваивает судоку значения из другого судоку.
	 *
	 * @param that второй операнд. Судоку, из которого следует взять
	 * значения для текущего судоку.
	 * @returns ссылку на текущий экземпляр класса.
	 */
	sudoku & operator = (const sudoku & that);
	/*
	 * Деструктор
	 *
	 * Освобождает динамическую память, занятую классом
	 */
	~sudoku();
	/*
	 * Функция, которая создает новое поле судоку, используя описанные ранее функции
	 */
	bool createNewField();
	/*
	 * Функция, выводящая в заданный файл игровое поле судоку
	 *
	 * @param path - путь к файлу
	 */
	void print(const std::string path);
	/*
	 * Функция, выводящая в заданный файл уровень сложности судоку
	 *
	 * @param path - путь к файлу
	 */
	void printLevel(const std::string path);
};
